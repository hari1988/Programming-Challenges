//Given an integer, find the next integer using the same digits that the given integer has
//If such a number is not possible, the next integer is the smallest integer with an additional 0 in it
import java.io.*;
public class Main {
    
    static char[] b = {'0','1','2','3','4','5','6','7','8','9'};
    
    public static void main (String[] args) throws IOException {
        File file = new File(args[0]);
        BufferedReader buffer = new BufferedReader(new FileReader(file));
        String line;
        while ((line = buffer.readLine()) != null) {
            line = line.trim();
            String next = findNextNum(line);
            System.out.println(next);
        }
        
        System.exit(0);
    }
    
    private static String findNextNum(String num){
		int[] arr = new int[num.length()];
		
		for(int i=0;i<arr.length;i++){
			arr[i] = num.charAt(i)-'0';
		}
		
		int i = arr.length-1;
		while(i>0 && arr[i-1]>=arr[i]){
			i--;
		}
		
		if(i==0){
			int j=num.length()-1;
			while(j>=0 && num.charAt(j)=='0'){
				j--;
			}
			StringBuffer buf = new StringBuffer();
			buf.append(num.charAt(j));
			buf.append(0);
			
			for(i=j+1;i<num.length();i++){
				buf.append(num.charAt(i));
			}
			
			for(i=j-1;i>=0;i--)
			{
				buf.append(num.charAt(i));
			}
			
			return buf.toString();
		}
		
		else{
			int j = arr.length-1;
			for(;j>=i && arr[j]<=arr[i-1];j--);
			
			swap(arr,i-1,j);
			
			//Reverse suffix starting at i
			reverse(arr,i,arr.length-1);
			
			StringBuffer buf = new StringBuffer();
			
			for(i=0;i<arr.length;i++){
				buf.append(b[arr[i]]);
			}
			return buf.toString();
		}
	}
	
	private static void swap(int[] arr,int a,int b){
		int temp = arr[a];
		arr[a] = arr[b];
		arr[b] = temp;
	}
	
	private static void reverse(int[] arr,int i,int j){
		while(i<j){
			int temp = arr[i];
			arr[i] = arr[j];
			arr[j] = temp;
			i++;
			j--;
		}
	}
	
}
